{"version":3,"sources":["swapi/swapi.js"],"names":["URL","output","document","getElementById","spinner","innerHTML","getTitles","films","sort","a","b","episode_id","map","film","title","join","queryApi","endpoint","fetch","then","r","ok","json","Promise","reject","main","results","planets","all","length","err","alert","console","log","remove"],"mappings":"AAAA;AAEA,MAAMA,GAAG,GAAG,uBAAZ,EACA;;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,MAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AAEAF,MAAM,CAACI,SAAP,GAAmB,aAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAOA,KAAK,CACTC,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAD5B,EAEJC,GAFI,CAECC,IAAD,IAAW,QAAOA,IAAI,CAACF,UAAW,IAAGE,IAAI,CAACC,KAAM,QAFhD,EAGJC,IAHI,CAGC,EAHD,CAAP;AAID;;AAED,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,SAAOC,KAAK,CAAClB,GAAG,GAAGiB,QAAP,CAAL,CAAsBE,IAAtB,CAA4BC,CAAD,IAChCA,CAAC,CAACC,EAAF,GAAOD,CAAC,CAACE,IAAF,EAAP,GAAkBC,OAAO,CAACC,MAAR,CAAe,uBAAf,CADb,CAAP;AAGD;;AAED,eAAeC,IAAf,GAAsB;AACpB,MAAI;AACF,UAAM,CAAC;AAAEC,MAAAA,OAAO,EAAEnB;AAAX,KAAD,EAAqB;AAAEmB,MAAAA,OAAO,EAAEC;AAAX,KAArB,IAA6C,MAAMJ,OAAO,CAACK,GAAR,CAAY,CACnEZ,QAAQ,CAAC,OAAD,CAD2D,EAEnEA,QAAQ,CAAC,SAAD,CAF2D,CAAZ,CAAzD;AAIAf,IAAAA,MAAM,CAACI,SAAP,GAAoB,UAASE,KAAK,CAACsB,MAAO,cAAaF,OAAO,CAACE,MAAO,EAAtE;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,KAAK,CAACD,GAAD,CAAL;AACD,GARD,SAQU;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA7B,IAAAA,OAAO,CAAC8B,MAAR;AACD;AACF;;AAEDT,IAAI;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"swapi.6af9fa3d.js","sourceRoot":"..","sourcesContent":["// https://swapi.dev/documentation\n\nconst URL = \"http://swapi.dev/api/\";\n// #region Setup\nconst output = document.getElementById(\"output\");\nconst spinner = document.getElementById(\"spinner\");\n\noutput.innerHTML = \"Loading ...\";\n\nfunction getTitles(films) {\n  return films\n    .sort((a, b) => a.episode_id - b.episode_id)\n    .map((film) => `<div>${film.episode_id}:${film.title}</div>`)\n    .join(\"\");\n}\n\nfunction queryApi(endpoint) {\n  return fetch(URL + endpoint).then((r) =>\n    r.ok ? r.json() : Promise.reject(\"unseccessfull request\")\n  );\n}\n\nasync function main() {\n  try {\n    const [{ results: films }, { results: planets }] = await Promise.all([\n      queryApi(\"films\"),\n      queryApi(\"planets\"),\n    ]);\n    output.innerHTML = `Fimls: ${films.length}, Planets: ${planets.length}`;\n  } catch (err) {\n    alert(err);\n  } finally {\n    console.log(\"FINAL\");\n    spinner.remove();\n  }\n}\n\nmain();\n\n/*\nsetTimeout(() => {\n  Promise.all([queryApi(\"films\"), queryApi(\"planets\")])\n    .then((res) => {\n      console.log(\"PROMISE.ALL , res = \", res);\n      const { results: films } = res[0];\n      const { results: planets } = res[1];\n      output.innerHTML = `Fimls: ${films.length}, Planets: ${planets.length}`;\n    })\n    .catch((err) => {\n      console.log(err);\n      output.textContent = \"Oops\";\n    })\n    .finally(() => {\n      console.log(\"FINAL\");\n      spinner.remove();\n    });\n}, 1000);\n*/\n\n/*\nsetTimeout(() => {\n  queryApi(\"films\")\n    .then(({ results: films }) => {\n      queryApi(\"planets\").then(({ results: planets }) => {\n        output.innerHTML = `Fimls: ${films.length}, Planets: ${planets.length}`;\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      output.textContent = \"Oops\";\n    })\n    .finally(() => {\n      console.log(\"FINAL\");\n      spinner.remove();\n    });\n}, 1000);\n*/\n\n/*\nPromise.resolve($.getJSON(URL + \"films\"))\n  .then(({ results: films }) => {\n    console.log(films);\n    output.innerHTML = getTitles(films);\n  })\n  .finally(() => {\n    console.log(\"FINAL\");\n    spinner.remove();\n  });\n*/\n\n/*\nfetch(URL + \"films\")\n  .then((r) => r.json())\n  .then(({ results: films }) => {\n    console.log(films);\n    output.innerHTML = getTitles(films);\n  })\n  .finally(() => {\n    console.log(\"FINAL\");\n    spinner.remove();\n  });\n  */\n"]}